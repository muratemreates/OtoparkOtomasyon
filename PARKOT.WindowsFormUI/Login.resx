<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picture_Cikis.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        cQAAEnEB89x6jgAAGVdJREFUeF7tnQmUVNWZx00EZE13U11VDTRLAyqiiKK4oCKiiOwoIig7xAjGxMxx
        4hnXjMRxiCfHE+MYx5xxziQTZyQzmgiyI0vvDc3WICrgvqGjGY3oLDrnzv+7/b7nfe/d+5bqquqqrvrO
        +Z+u6q6qfu/+/t937636quqkYhSjGMUoRjGKUYwMxbcsfVsRXS+GN9zjlPdjRSfQ+aelpQP/pmfPYbjc
        A+oGdYFOhopGaA0aBxqPLjROK3v1OhWXu0Ndoc4QjWNehTyhfywtvey58vID64cOFRtOO03g8vFfx2LL
        8bdSiE6wk3XbQg46/06/jceX/HtFxfF1w4aJtUOGiN9XVBxcVVY2EX8rgcgIeZMwrfBjsfFrBwz4/Oj9
        94v3nnxSvPbww+LAbbdJIzwZi/01bhOHqCKQwwvVBHTenZ+Ox3+8YcQI8eq994rXHnpIvIKfu+bNE89V
        Vp5YWVIyE7fpDVHlzHkTOOC/sWqVeOfRR8URmKDlRz8SzYsXi5bvf1+a4IlYbCVum4R6QoVoAgf8N5Ag
        RwD+4O23i+YlS0TT7Nmi+aabpAnuLimZhduWQ1Q1c9YEZvg/+IFomj5dNE6cKJqmTBEHVqwQ6wvbBEb4
        u2+8UdSOGSNqL7xQNF51lWjGdTLBXSUl1+M+OWsCf/jTpkn4jVdfLdU0ebJtgscLzwR6+D/8YSv8iy4S
        tRdcYKvxyitz3gSR4DdMmCDVOGlSqwlOP72QTOCFf889rfDnzm2FP3q0R7lsgpTgN6C0kRqvuUYcWL68
        UEzgDx8lXweflYsm8Ic/daoNXge/ASckBYMcuOWWjm6CNsFnsQmezQETRIfP4C349ePH22rAbfbDBOs6
        5pogLfBZuWCCtMKvv+IKKWmC732vo5lAwv9nwF+fCvzzz9eqEePWjPu3hwkyAt9tgg6yOwiGr4Hr0Xnn
        adWI8ZIm6N//xF29e2fFBKHhm+Z7E3hb48bJ+x3IfxP4w6ctnhuwGzb/3UeyEtB0kAUTZAU+i+63/+ab
        83U6cML/2c9a4WOcds+Z01ra/SCrJgihBowdmSqTJsge/Msvl6obO1bU4377v/vdfDOBP3zOfA1Ih0aN
        iqRGjF0zHj8TJmgX+Kw8M4E/fDXzU4AcpEyYoF3hS112mbz//mXLct0ErfCTyR+vP/tsL3zKeg20dEua
        II3TQSj4tgGiwGfwFnwPeAu+1KWXyvvsgwleyE0TeOHffXcr/BtuSCv8uhAymIBfSg4d7QefwVvwSbWX
        XCLqcPt9S5eKF3LrGcO0wdfBrDv33JTUhHF1TQcxKLQJvrWqa9cBa/r188LXPbefQfgEnlU3Zoy8Tw6Z
        wAkfYxUGflTItSmqkU1QWXlierdu5+NYy6BTrOP2jZN/X16+as/8+eKdxx7LPnwl61X48jVyqC43TBAa
        fhBsHTyW7vZR1AQmOzD2j5eXP4bj7QtRB1ZgFej8b/H471puu6394RNwBb7DBEuWtNeawAnfKvuHLPh1
        gG8CroI1Qj7nnLSqYfp08VQy+TyOeRBEvZg0Rr7RZXV5+eNNKB+H7rhD7Jo92wzfMkAo+ICWDvi1F18s
        Rffdt3hxtk1ghN/M8BWYDFkLWwPL1siRTpl+b5J120aMYw2YPRGPP43jHgpRbyF1ZPuOT+efl5Vdumbg
        wK9abr9dNM2Y4YTvyv5sZj7Dl40TUD3um0UTeOAfVeFjb++GHgjcDY6ku51bIe5XP3q02L9ggfjDoEFf
        z+vR40Yc+2CI1gFkAN+gVu1eT5WX30fNmy233ipbuLIFn8CHgS9fTIHoMbJgAj18TJMM3wPdBSQImOfv
        bVA9KtG+efPEWqyTHozFfoFjHwFVQr0g4usb9CYE6kOP/X0s9gC9KEOtW42TJmUFvhG8Bb9Ogc+qw333
        LVqUKRMEwg8F3fT7CKrHfQOFzGf4K2OxR3Hso6AhEG0FiWuoN5mQS2jFmKDOXYcJAD/KvJ9O+AzcIat5
        MkMmcMK3VvsO+Bh0I1zd7wzSwiTR30Kqgcq+Bf+BWOyXOPbzIHqXUQIinqHfiCNPHKIBTEoT4EGpf4/6
        +NoVPl+2wEvR8+wQPU4aTeCEzws+hk+rfABKBXoUwHX432HUgLK//6abdPDVMYj0FjOHCWhApQluuUX2
        8WUFPsHWZb4GfppN4ISvZj52RRI+wWEFQA8CzhDVy3w9jAj+AX3mV0ApwecwmwC7gnaF7wKvSppg4cJU
        TeAPn+Z6DHpo6HRZkQrYCJp+F1INmIYO6DO/zfA5PCZYh39GrVu2CRT4HgNkGb58Fo7243gcaQIc6+Px
        eFgTeOHfdZcTvg94HXRf2HRdpxEjHGrA76TosqJGwDeU/bTB5/CaANklTYCtYa7BV02wF3vhkCbwh89z
        PkF1KTR0uqwKEG3IqvC3IEn4GSr7ptCagPr3pAlM8C0DZBS+C7wUBkg+F4/775s/P8gEwfAJrKKgbPcD
        HgW0TgQ/U3N+UHhMQFtE6t+jraHWAAp8gu0xQLrhE3gLvv2CDJnAXAnoxRH/sk9wLbnBe6CT6DIrDcBV
        SfhZKvum0FYCat2iFq52gU/ADfBZ9Xg8emrUZYLvQN1/m0zeGQTfBD7j0JXHIvgt7Qyfw2yC8eOjwWcD
        pApfNYEBvizhUD0ej6eDX8TjP8Wx93sqkbiH4R/VwA8NHoBs8LgeSQzYIPpbE46f4NOxtzd8DrMJsDOI
        NO9nGj7BtMQmWDd8uEDmbzHB9wVPP1kWIC1Yk6z7uCGb1IhzyDX4HHoTLFsmW7iyBl8BrkqFb79QQ1Dx
        OC0w6nYcoxt+Pe6TdvAM0hJf10k1BSkXM98dWhNQEyftDHIBvi2A5a0cmeAlLF5fvfNOJ3wdeBU+oEhY
        BNZP1u0YJF9XpYJ2CPenn004v/Ze8IUNjwnoWThq3aLuHV/4fDlN8Hm+J+COl2gZvmICUiPWK82zZpnh
        008SgEhwuOwrhsi3d8mG7FKTS7twPLmy4AsbXhPg4G0TKPDtl3QzAZ+Bq1KAOy4TYFxXwfNlE3i6XnfG
        GaL21FNFzeDBonrAAFFdWSl2VlSInYmE2BGPi+29e4vtZWWt6tXLqe98R2qHSaWlorpPH7Fn0iSxBkmU
        L/A5zCbA9tABn5VJ+Jztqgi0JRP8OkCuxXET4J39+4sdgLstFhPbSkrEiz16iBd79rS1TRUAsyJBx+OS
        dkLVMNCeq68Wa4YOzTv4HPrpYMkS2cJlg1fhmwyQTvgE1pK6wifYNYC9c+BAsR2gX0QGbgXkrd27t/60
        FAZ8aOgKcFXVqCD5Dp9Db4LFi1u3h2GyP0PwCXg1Bng7yuxWlOgtALsFsFnpAG+C7ga+E2YjVUM1HQg+
        h78JsgS/FtCrMV9v79tXAt/crZstFXwk+G7wAKwFHwCdJeFPnNih4HPoTbBokWzh0sIntQU+gNdiPt9R
        VSVexHy6CaA3de3qAO+Gn1bwgOwB7wKuqjaZFHs7KHwOswloaxgEX2MAHXyGvhUrcAKuKlX4RvAWfDd4
        N3Qd+BpUIVYhwOcIZ4KI8GuR8TtR3rci0zcC9MZTTkkZfpSsDwLvB90B/5prCgI+h78JVPhsAAP8Gizk
        tmHvvQnQCDrLD74KXsK3wBvhZwg8qQ67jX0EH+YtFPgcehMsXCi7d/zgk6qHDRNbysvFBgW6Dr4K3g0/
        pZLvBz8k+FpMTaRChs/hbwIN/B0ok5sx2Bu6dJFKG3wLvBt+JsCT6rH1LHT4HHoTLFgg6umZQkCvQanf
        hkXdRoBg8EHw3QYwwW9TyQ8BXoVOqovFJPz99PRuEb4dXhPQ08Ywwc7hwyX49Qp4qSzB14LXwA8Dvgjf
        P5wmiMdXrhkyRL54tAFgMglfLfk2fBW8Cj9F8KSGvn2L8APCa4LBg2UvwUY2QQbha0t+ilmvgi/CjxZG
        E2wCHBW+2wAqfNUA6YYfFnw9dikkCX/y5Lx8Sbe9Qm+CceMcJsgW/FSy3obfr584APhri/Ajh8ME1LnL
        JtgMQGHgSwO0Bb4C3g0/CDyp0QufPqGrCD9CqCao+GU8/iCZgD4UWTVBEHxpgDbAV8Gb4KvgG+JxJ/zy
        8r/D8V8I0Tem9rHOpwg/ZJAJ6DPtyn4Vjz+w/qyzxNF77pHP+/vCVwzA8G0DpAG+KesJPqnJMgAt+la2
        fjQbfToHfToXf0ZfEX7IkAb4TTL5VwT/2P33i8MrVoi9c+aIrcmk1gC+836K8HVZr8Jn8I2sRELsqqwU
        LVOmyMXfqkTiYZyHagA6r2IEhJwC5Hv1FPj0Zg65FgDQqPBtA7QRvi7rVfhNlnb372+b4JFk8kGcjzr/
        F03gE5HhSwO0A3wd+CZUp12Wdg8YIA5OnSpNYL0NLcznExR0OOHfd58Nn95lZISvGkCFbxkgVfgMXoVv
        zHoF/K6KCrHb0p6BA8WhadOkCR5NJsN+SEVBRmj4qgHCzvtph2/IehV+c58+UnsGDRIvFU3gG/7wAVYH
        XxogFfhQ2uFrwDf37Sv2WNpXVSVemj69aAJNeOC/pMCnjh8jfNUALvi60t8W+J6SD/llvQp/L7aGJGmC
        GTOKJlAiEL5pz68r/anO+wxfNYAvfAavwPcDL+Fja0g6MGSIeLloAhkpw5cGcMEPVfo18HXZHxZ+qKy3
        wJP2Y2tIaiETzJwp3/RZqCYIBT9U9rvge7I/S/D9sp7BHyBha0g6OHSoeOXaawvSBGb49NJvAPxQ2c/w
        oSjzvgrfNoAbvgXehq/JeoavA9/Cou3hqaeKVwvMBP7wAZfhp5L9UUp/puD7ZT2DP0jC1vAQbQ+xFjhy
        3XUFYQJf+BtDwNdlv4SvGsCd/Rr4bgMwfDZAqLIfAD8IPOsl7AwOA/6RWbPEmmHDOqwJAuH7NXq4sz/K
        wi8Ivjv7o8Bn8Aw/bNYzeKnBg8Vh6GXAP9pBTeCAf9SCv3fevEjwI2V/iqVfwockfKgt8MOCP4wdAell
        6JUzzhDHrr++Q5nACL9WgZ+W7Gf4kITvk/06+EHzvl/ZDwPfD7yET7sC6NXhw8Wx2bPF2g5ggtDwVQPo
        4Gct+/3gQ1Hh+2W9BzztCCwdwXi9dsMNeW0CX/gbAFcHPyj7pQEAPZXsD1360wHfAq/CDwWedgSWjmLc
        3shTE7TCp69QJ/j33uuB79fjrzVAitnP8E0G0JX+MPN+JPghst6GTsKOgHQMem3ECPHGnDl5ZYJv4J95
        Ziv85cud8F1v8giEH5T9UKrZTw2cBydMkC1cQfO+Cp8NEBV+WPDHAPw1S6+ffbZ4c+7cvDBBOPhQpOy3
        DBC4+AuZ/Sp8at7cfM45ogU/dwFmUOlPBb5f1hvBYzdAep2EReEbI0eKt8gEuJ6rJvCFv16BH6b8M3xp
        AM5+ywAMnw3A2W/a9+uyX23dfjKZrKUOXurfoxauMKW/LfDdWe8GL6EzeBbG9M1zzxVv0aeG5qAJPPAP
        MfyxYyV8xzt8A+Drst9Y/hk+pGa/yQAEn96uxfCttu1LHorHH6GXZ6l/rxlQA+d93EYagOBDQfB1JV8L
        HrBt8ATd0ltYS5HeHjVKvE0fGo2/54oJtPD3MHyAJfiqAYKyX2cAU/mPmv38Xj3lHTujobOgYT9PJB4i
        ExyCCaiPL0zp9+zzA+D7Zr0LPEO34WNBSHrnvPPEOxjfXDCBhP+0Bn4Nw+/c2fP+/iADMHxpAL/sVwwg
        sz/AAPa7dL+BT+/VOw2i79OlQewn34ZGJpg2TewF1LCl37Tg84UfAjxDl+CxGGS9e/754t3588XadjRB
        aPim8q8awC/7A8u/Bd+0+JOlHyXd5y3a8itjrJ9JGlAyAfXvUQuXI/sB3l36JXwoLPwwWa+FjoWgqvdG
        jxbvLljQLiaw4W9Q4WNuIvjrAHQdwQ8wgC77dQZoa/kP+ckc8kujrOvfmGDGDLEfYHWl3zPvK/DZAH7w
        w4D3QMeORdX7F1wg3suyCcLD1xhAl/1GA3D2WwbwLf8WfLcBIn4sizw3yGGCwzAB9fEFlX73vE/wpQEi
        wNeBdwDHToD0gaoLLxTvL1yYFROY4V92mVgHqATfbQA7+0MYgOE7DKDJ/jDlnz6KbX/0T+PSmoD691oA
        Vpf9utLvhq/O+W74pqzXQscugHVc1UUXiQ8ybIJg+J06+RtAga8aQJv9lgHCPvnjzv42fg6fxwS0a6D+
        vYN4PE/2K/DdpT8KfB14O8tV2NgFkD50i0ywaFFGTGDDpwXfEQV+tQrfbQBANxlAl/1+BpDwFQM4yr/L
        APTxqxI+YKQAn8NrAsAkE1ALl4RvZb+u9NvzPsGH7AVfVPgKdAb9EXYARl18sTieZhP4wn8BMF9wwTcZ
        QJf9RgMAvMcA7uxnA1jwSWn+7F2tCah/j1q43NlP8G0DEHzInvcJPhQE3wTeDfo/sAMwaswYcXzx4rQ8
        T+CBf1AD320AtfxHMQDDdxgA4IPKPxsgQ5+6rTfBrFmyhcuU/brSHxW+G7wK+WOs/k2St7nkEvEhmQD/
        sy0m6PSv8fhfauEDqAO+wQAMP4oBou7/ZelPJDL5keteEwAu9e9RC5df9quln+CzAUzwdVnvhv4JCSt/
        o6zbfUwmWLJEmuDX/fqRCRJQD6gTFBjffjIWG/38oEFfaeGffHI0AyjwVQMwfJ0Bwu7/s/RNGx4TUN8e
        9e9RC5cx+wm+K/sJPhvAD74KXoX+Jyz2gsRG+AQm+HjpUvGHoUO/WlFaOgXHHoO6QoHj0Wl1IvFY4+zZ
        4tCttxrhZ8MADN9tABt+9r5jR28CjNERqpIRs5/gk+yyHwCf4f4nFnqkTzXivzmMcMUVYt+UKeJXffr8
        BsfdD+oFBVaBzquTyd/tuvFGCb8GD7IWINcS/DAGwG1NBmD4RgMAvM4A7gVgO321mtYE1L9HLVz2yt8n
        +z2l3w++C7wNGws90meK+HeqGfi+hzFdPVFR8TyOuQoqhbpAvtHlXxKJh3dcdZWgKrCxb18J32gAC35a
        DQDwJgO08/fqadcEr8MExwA5bParpd8NX5f1KvQ/o7SbZJvBMsGnkyeL3RirRyoq/gHHOxTqDZEB6DyM
        0fmOnj2HP9uv34kaPMAmywASfgoGYPgmAzD8MAbYWV4umtv/q9W0JqD+PWrh0q383dmvln6CzwZQM9/O
        ehf4zy+9tFWYlqWs624jfIa10dsLF4pnBg36Yswpp1yNY+UKQMfuG/TiSM+VpaXTn4MJqseOFRsx8EEG
        UOf/TBhAwp8wob3hc2hNQP171MLlftLHk/0E35X9POdz5rvhq9BPWPoCbPiyaog/T5ok3gH81VVVXy4u
        K7sFx3gm1Nc63sA1AJ2c/JDGn5SUXEeVwGGCDBnAbwu4w4K/Njfgc2hNQP17bwI0w3cbwJT9auk3wWfo
        JkkzoGq/u2iRWD148JeLysqW49hGQpE/rJKqQDcodldJyfVyOsA/2IT5N4wBGH4qBnBvAXfEYmJ37sHn
        8JoAU8BbWEC/BdBu+GwAbfarpV8DnyF/efnl4r/GjXOIfkf6YupU8d7ixRL+wtLSFTimcyAq/bQFJJ7E
        lY45VLAJym0T4J+wCST8FA3A8IMMsJ3gYzGaI2XfFFoTUP+ebOHSlX/8XjWAO/vDwP9v7M5Y8nfTpon3
        lyxxwx8MlUPU9EKlPzR8CroxmYDu7DFBKAMo8KMagL6CPQ/gc3hM8AJMQP17soVLYwCGzwbQZr9S9hk+
        Af8f0vjx32j6dPFBmuFzBJsgAwbYRvCvvDJf4HN4TYDdAPXvUQuXWv5VA+jKvzv73fD/F2ND+oo0c6Y4
        vmxZRuBzaE1QTSZIJNJuAIK/K//gc2hNQK1b1MIVNP+7yz9nP5d9hk/gv0Z1/Praa8WHGYbPEWiCdBjg
        xbKyfIbPYTQBtXC5DWCc/5W5385+lHuG/3/XXSc+uvlmsXrIkIzD5zCaYDNM0FYDEPym/IfP4TEBNWpQ
        /x61cLkNQPBNBnCUfzYAMj/b8DmCTZCCAbaWlnYk+BxaE1D/3ocAnXIFwJwvy347wOfQmoAWhpuTycgG
        kPBxYvR9gR0IPofWBNS69RFAR14DzJiR8QVf2HCaoHfv65+trDxRg4MkE4Q1QAeHz2E0AbVw+e0CHFtA
        7PM/WLo0J+BzGE2whU3gY4AtJSWisePD59CagFq3qHsn6HmAL6dOTfuTPOkKrQlqFRPoDFBg8Dk8JqCW
        LWrd+gTZbpwGJk/WPb2bE/A5zCaoqPAYgL76rRELmgKDz6E1wUdkAmS6uwp8PmmSeJfgV1XlLHwOvQkA
        eqtiAoJP3/9H8FfGYo/itoUEn8Nogj9ZJpBVYOJE+yXdXIfPoTUB9RPWjholakaOlB8Oubaw4XNoTfD2
        vHni0zlzxGf4+frcuRK+9ZJuzsPncJqgpGTmM4nE4T8OHCjWVFWJZ5LJj+/t3fsn+BudELUoqT3rhQKf
        w2GCv00k/uLp/v0/oj7DP552mvinysojC0pKluJvZ0P0km7Ow+dgE9BLydSD1n96165jZ3TvPhGXR0Bn
        QNSgEIcKFT4Hm4B69mk8Bs3o0ePKqyBcprE6HeoP0ev5eQGfg01AfeglEJ0cfX8utSXRmxSoN41PqFDh
        c9BY0TjQeNC40PjwWNG40fjROOYNfDUILjmcToBcTqLKQJ2pZJC8O6EMBScMjQuNjzpWNH55PVZ04GQE
        OgkSXS6C10dxrIpRjGJkLU466f8B+mGyEL2WcrwAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="saat_Timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>